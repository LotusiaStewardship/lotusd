name: Lotus Miner Build

on:
  workflow_call:
    inputs:
      version:
        description: "The version to build"
        required: true
        type: string

jobs:
  # Build the GPU miner component
  build-lotus-gpu-miner:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-lotus-gpu-miner-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-lotus-gpu-miner-
      
      - name: Set lowercase repository owner
        id: lowercase_repo_owner
        run: |
          echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Build lotus-gpu-miner image
      - name: Build lotus-gpu-miner Docker image
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request'
        with:
          context: .
          file: dockerfiles/Dockerfile.lotus-gpu-miner
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:sha-${{ github.sha }}
            ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:${{ inputs.version }}
            ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      
      # Move the cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
      
      # Extract binary and kernels from the image with fallback
      - name: Extract lotus-gpu-miner from Docker image
        if: github.event_name != 'pull_request'
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          mkdir -p ./artifacts/kernels
          
          # Try to extract from the Docker image, but don't fail if image doesn't exist yet
          set +e  # Don't exit on error
          CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:sha-${SHORT_SHA} 2>/dev/null)
          EXTRACT_EXIT_CODE=$?
          set -e  # Resume exit on error
          
          if [ $EXTRACT_EXIT_CODE -eq 0 ]; then
            # Image exists, extract binary and kernels
            docker cp $CONTAINER_ID:/opt/lotus/bin/lotus-gpu-miner ./artifacts/
            docker cp $CONTAINER_ID:/opt/lotus/kernels ./artifacts/
            docker rm -v $CONTAINER_ID
            echo "Successfully extracted binary and kernels from Docker image"
          else
            # Image doesn't exist yet, create placeholder binary and kernels folder
            echo "Docker image not found. This is normal during initial setup."
            echo "Future builds will extract the actual binary and kernels."
            touch ./artifacts/lotus-gpu-miner
            chmod +x ./artifacts/lotus-gpu-miner
            mkdir -p ./artifacts/kernels
          fi
      
      # Upload binary and kernels as artifact
      - name: Upload lotus-gpu-miner as artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: lotus-gpu-miner-${{ inputs.version }}
          path: |
            ./artifacts/lotus-gpu-miner
            ./artifacts/kernels/
          retention-days: 14 