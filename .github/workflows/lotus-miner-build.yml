name: ⛏️ Lotus Miner Build

on:
  workflow_call:
    inputs:
      version:
        description: "The version to build"
        required: true
        type: string

# Global defaults for all jobs
defaults:
  run:
    shell: bash

jobs:
  # Build the GPU miner component
  build-lotus-gpu-miner:
    name: 🔥 Build lotus-gpu-miner
    runs-on: [ self-hosted ]
    outputs:
      build_status: ${{ job.status }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Prepare buildx cache directories
      run: |
        # Create cache directories with appropriate permissions
        sudo mkdir -p /tmp/.buildx-cache /tmp/.buildx-cache-new
        sudo chmod -R 777 /tmp/.buildx-cache /tmp/.buildx-cache-new

        # If the index.json file doesn't exist, create an empty one
        if [ ! -f "/tmp/.buildx-cache/index.json" ]; then
          echo '{}' > /tmp/.buildx-cache/index.json
        fi

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-lotus-gpu-miner-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-lotus-gpu-miner-

    - name: Set lowercase repository owner
      id: lowercase_repo_owner
      run: |
        echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build lotus-gpu-miner image
    - name: Build lotus-gpu-miner Docker image
      uses: docker/build-push-action@v4
      if: github.event_name != 'pull_request'
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-gpu-miner
        push: false # Don't push to registry yet
        load: true # Load into local Docker daemon
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:sha-${{ github.sha }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:${{ inputs.version }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        outputs: type=docker

    # Extract binary with improved method
    - name: Extract binary and kernels from Docker image
      if: github.event_name != 'pull_request'
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        mkdir -p ./artifacts/kernels

        echo "Extracting from local Docker image..."
        # Extract from the local Docker image
        CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:sha-${{ github.sha }})
        docker cp $CONTAINER_ID:/opt/lotus/bin/lotus-gpu-miner ./artifacts/
        docker cp $CONTAINER_ID:/opt/lotus/kernels ./artifacts/
        docker rm -v $CONTAINER_ID
        echo "Successfully extracted binary and kernels from Docker image"

        # Verify file exists and has content
        BINARY_SIZE=$(stat -c%s "./artifacts/lotus-gpu-miner" 2>/dev/null || echo "0")
        echo "Binary file size: ${BINARY_SIZE} bytes"
        if [ "$BINARY_SIZE" -lt 1000 ]; then
          echo "WARNING: Extracted binary is very small (${BINARY_SIZE} bytes)!"
        fi

        # Verify kernels were extracted
        if [ ! -d "./artifacts/kernels" ] || [ -z "$(ls -A ./artifacts/kernels 2>/dev/null)" ]; then
          echo "WARNING: No kernel files were extracted or the directory is empty!"
        else
          echo "Successfully extracted kernel files:"
          ls -la ./artifacts/kernels/
        fi

    # Now push to registry after successful extraction
    - name: Push Docker images to registry
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-gpu-miner
        push: true # Now we push to registry
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:sha-${{ github.sha }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:${{ inputs.version }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-gpu-miner:latest
        cache-from: type=local,src=/tmp/.buildx-cache

    # Move the cache
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true

    # Upload binary and kernels as artifact
    - name: Upload lotus-gpu-miner as artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: lotus-gpu-miner-${{ inputs.version }}
        path: |
          ./artifacts/lotus-gpu-miner
          ./artifacts/kernels/
        retention-days: 14
