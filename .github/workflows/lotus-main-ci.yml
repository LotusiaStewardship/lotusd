name: Lotus Main CI

on:
  push:
    branches: [ main, master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  # First, check the current version
  version-management:
    uses: ./.github/workflows/lotus-version-management.yml
    secrets: inherit
    
  # Then build all the binaries in parallel
  build-core:
    needs: [version-management]
    if: |
      always() && 
      (needs.version-management.outputs.should_bump == 'false' || 
       needs.version-management.outputs.version_bumped == 'true')
    uses: ./.github/workflows/lotus-core-build.yml
    with:
      version: ${{ needs.version-management.outputs.version }}
    secrets: inherit

  build-tools:
    needs: [version-management]
    if: |
      always() && 
      (needs.version-management.outputs.should_bump == 'false' || 
       needs.version-management.outputs.version_bumped == 'true')
    uses: ./.github/workflows/lotus-tools-build.yml
    with:
      version: ${{ needs.version-management.outputs.version }}
    secrets: inherit

  build-gui:
    needs: [version-management]
    if: |
      always() && 
      (needs.version-management.outputs.should_bump == 'false' || 
       needs.version-management.outputs.version_bumped == 'true')
    uses: ./.github/workflows/lotus-gui-build.yml
    with:
      version: ${{ needs.version-management.outputs.version }}
    secrets: inherit

  build-miner:
    needs: [version-management]
    if: |
      always() && 
      (needs.version-management.outputs.should_bump == 'false' || 
       needs.version-management.outputs.version_bumped == 'true')
    uses: ./.github/workflows/lotus-miner-build.yml
    with:
      version: ${{ needs.version-management.outputs.version }}
    secrets: inherit

  # Revert version bump if any builds failed
  revert-version:
    needs: [version-management, build-core, build-tools, build-gui, build-miner]
    if: |
      always() && 
      needs.version-management.outputs.version_bumped == 'true' &&
      (needs.build-core.result == 'failure' || 
       needs.build-tools.result == 'failure' || 
       needs.build-gui.result == 'failure' || 
       needs.build-miner.result == 'failure')
    uses: ./.github/workflows/lotus-version-revert.yml
    with:
      current_version: ${{ needs.version-management.outputs.version }}
      build_failures: ${{ needs.build-core.result == 'failure' || needs.build-tools.result == 'failure' || needs.build-gui.result == 'failure' || needs.build-miner.result == 'failure' }}
    secrets: inherit

  # Finally, package and release all artifacts
  create-release:
    needs: [version-management, build-core, build-tools, build-gui, build-miner, revert-version]
    if: |
      always() && 
      github.ref == 'refs/heads/master' && 
      github.event_name == 'push' &&
      needs.build-core.result == 'success' &&
      needs.build-tools.result == 'success' &&
      needs.build-gui.result == 'success' &&
      needs.build-miner.result == 'success' &&
      (needs.revert-version.result == 'skipped' || needs.revert-version.result == 'success')
    uses: ./.github/workflows/lotus-release.yml
    with:
      version: ${{ needs.version-management.outputs.version }}
    secrets: inherit

# Add permissions at the top level
permissions:
  contents: write
  packages: write 