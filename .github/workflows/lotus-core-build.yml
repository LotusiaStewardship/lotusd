name: 🏗️ Lotus Core Build

on:
  workflow_call:
    inputs:
      version:
        description: "The version to build"
        required: true
        type: string

jobs:
  build-lotusd:
    name: 🚀 Build lotusd
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set lowercase repository owner
      run: |
        echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and load the image locally
    - name: Build lotusd
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotusd
        load: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-node:${{ inputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Extract binary
    - name: Extract lotusd binary
      run: |
        mkdir -p ./artifacts

        # Create a container and extract the binary
        CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-node:${{ inputs.version }})
        docker cp $CONTAINER_ID:/opt/lotus/bin/lotusd ./artifacts/
        docker rm -v $CONTAINER_ID

        # Verify extraction
        ls -la ./artifacts/

    # Push to registry
    - name: Push to registry
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotusd
        push: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-node:sha-${{ github.sha }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-node:${{ inputs.version }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-node:latest
        cache-from: type=gha

    # Upload binary as artifact
    - name: Upload artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: lotusd-${{ inputs.version }}
        path: ./artifacts/lotusd
        retention-days: 14

  build-lotus-cli:
    name: 🖥️ Build lotus-cli
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set lowercase repository owner
      run: |
        echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and load the image locally
    - name: Build lotus-cli
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-cli
        load: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-cli:${{ inputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Extract binary
    - name: Extract lotus-cli binary
      run: |
        mkdir -p ./artifacts

        # Create a container and extract the binary
        CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-cli:${{ inputs.version }})
        docker cp $CONTAINER_ID:/opt/lotus/bin/lotus-cli ./artifacts/
        docker rm -v $CONTAINER_ID

        # Verify extraction
        ls -la ./artifacts/

    # Push to registry
    - name: Push to registry
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-cli
        push: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-cli:sha-${{ github.sha }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-cli:${{ inputs.version }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-cli:latest
        cache-from: type=gha

    # Upload binary as artifact
    - name: Upload artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: lotus-cli-${{ inputs.version }}
        path: ./artifacts/lotus-cli
        retention-days: 14

  build-lotus-tx:
    name: 💰 Build lotus-tx
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set lowercase repository owner
      run: |
        echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and load the image locally
    - name: Build lotus-tx
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-tx
        load: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-tx:${{ inputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Extract binary
    - name: Extract lotus-tx binary
      run: |
        mkdir -p ./artifacts

        # Create a container and extract the binary
        CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-tx:${{ inputs.version }})
        docker cp $CONTAINER_ID:/opt/lotus/bin/lotus-tx ./artifacts/
        docker rm -v $CONTAINER_ID

        # Verify extraction
        ls -la ./artifacts/

    # Push to registry
    - name: Push to registry
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: dockerfiles/Dockerfile.lotus-tx
        push: true
        tags: |
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-tx:sha-${{ github.sha }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-tx:${{ inputs.version }}
          ghcr.io/${{ env.REPO_OWNER_LC }}/lotus-tx:latest
        cache-from: type=gha

    # Upload binary as artifact
    - name: Upload artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: lotus-tx-${{ inputs.version }}
        path: ./artifacts/lotus-tx
        retention-days: 14
